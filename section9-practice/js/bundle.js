(()=>{"use strict";const e=new class{constructor(){this.projects=[],this.listeners=[]}addProject(e,t,s,i){let n={title:e,description:t,people:s,id:Math.random(),status:i};for(let e of this.listeners)e(this.projects.slice());this.projects.push(n),this.updateListeners()}addListener(e){this.listeners.push(e)}moveProject(e,t){let s=this.projects.find((t=>t.id==e));s&&s.status!==t&&(s.status=t,this.updateListeners())}updateListeners(){for(let e of this.listeners)e(this.projects.slice())}};class t{constructor(e,t){this.project=e,this.list=t,this.listItem=document.createElement("li"),this.listItem.draggable=!0;let s=document.createElement("h2"),i=document.createElement("h3"),n=document.createElement("p");s.innerHTML=this.project.title,i.innerHTML=this.project.description,n.innerHTML=this.persons(this.project.people)+" assigned",this.listItem.appendChild(s),this.listItem.appendChild(i),this.listItem.appendChild(n),null==t||t.appendChild(this.listItem),this.configure()}persons(e){return 1===e?"1 person":`${e} persons`}dragStartHandler(e){e.dataTransfer.setData("text/plain",this.project.id),e.dataTransfer.effectAllowed="move"}dragEndHandler(e){}configure(){this.listItem.addEventListener("dragstart",this.dragStartHandler.bind(this)),this.listItem.addEventListener("dragend",this.dragEndHandler.bind(this))}}class s{constructor(t){this.type=t,this.assignedProjects=[],this.templateElement=document.getElementById("project-list"),this.wherePutElement=document.getElementById("app");let s=document.importNode(this.templateElement.content,!0);this.element=s.firstElementChild,this.element.id=`${this.type}-projects`,this.element.addEventListener("dragstart",this.dragLeaveHandler.bind(this)),this.element.addEventListener("dragend",this.dragOverHandler.bind(this)),this.element.addEventListener("dragend",this.dropHandler.bind(this)),e.addListener((e=>{this.assignedProjects=e;let t=e.filter((e=>"active"===this.type?"active"===e.status:"finished"===e.status));this.assignedProjects=t,this.renderProjects()})),this.renderContent(),this.attach()}renderProjects(){let e=document.getElementById(this.type);e.innerHTML="";for(let s of this.assignedProjects)new t(s,e)}attach(){this.wherePutElement.insertAdjacentElement("beforeend",this.element)}dragOverHandler(e){if(e.dataTransfer&&"text/plain"===e.dataTransfer.types[0]){e.preventDefault();let t=this.element.querySelector("ul");null==t||t.classList.add("droppable")}}dropHandler(t){var s;let i=null===(s=t.dataTransfer)||void 0===s?void 0:s.getData("text/plain"),n=this.element.querySelector("ul");null==n||n.classList.remove("droppable"),e.moveProject(i,"active"===this.type?"finished":"active")}dragLeaveHandler(e){let t=this.element.querySelector("ul");null==t||t.classList.remove("droppable")}renderContent(){let e=`${this.type}`;this.element.querySelector("ul").id=e,this.element.querySelector("h2").innerText=`${this.type.toLocaleUpperCase()} PROJECTS`}}new class{constructor(){this.templateElement=document.getElementById("project-input"),this.wherePutElement=document.getElementById("app");let e=document.importNode(this.templateElement.content,!0);this.element=e.firstElementChild,this.element.id="user-input",this.titleInputELement=this.element.querySelector("#title"),this.descriptionInputELement=this.element.querySelector("#description"),this.numberInputELement=this.element.querySelector("#people"),this.attach(),this.configure()}gatherUserInput(){let e=this.titleInputELement.value,t=this.descriptionInputELement.value,s=this.numberInputELement.value;if(e.trim().length>0&&t.trim().length>0&&s.trim().length>0)return[e,t,+s]}handleSubmit(t){t.preventDefault(),this.gatherUserInput()&&(e.addProject(this.titleInputELement.value,this.descriptionInputELement.value,+this.numberInputELement.value,"active"),this.titleInputELement.value="",this.descriptionInputELement.value="",this.numberInputELement.value="",alert("form submitted"))}configure(){this.element.addEventListener("submit",this.handleSubmit.bind(this))}attach(){this.wherePutElement.insertAdjacentElement("afterbegin",this.element)}},new s("active"),new s("finished")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,